name: CodePush

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      platform:
        required: true
        type: string

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-20.04
    environment: client-${{ inputs.environment }}
    env:
      BUILD_DIR: ./build
      SOURCEMAPS_DIR: ./build/sourcemaps
      APPCENTER_ACCESS_TOKEN: ${{ secrets.APPCENTER_ACCESS_TOKEN }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js v16
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Create Dotenv File
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
          envkey_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          envkey_IOS_CODE_PUSH_DEPLOYMENT_KEY: ${{ secrets.IOS_CODE_PUSH_DEPLOYMENT_KEY }}
          envkey_ANDROID_CODE_PUSH_DEPLOYMENT_KEY: ${{ secrets.ANDROID_CODE_PUSH_DEPLOYMENT_KEY }}
          envkey_KILL_SWITCH_ENDPOINT: ${{ secrets.KILL_SWITCH_ENDPOINT }}
          envkey_CALL_ENDPOINT: ${{ secrets.CALL_ENDPOINT }}

          directory: ./client
          file_name: .env

      - name: Cache Client Dependencies
        id: cache-client-node-modules
        uses: actions/cache@v2
        with:
          path: ./client/node_modules
          key: client-node-modules-${{ hashFiles('./client/yarn.lock') }}

      - name: Install Client Dependencies
        if: steps.cache-client-node-modules.outputs.cache-hit != 'true'
        working-directory: ./client
        run: yarn

      - name: Build Content
        working-directory: ./content
        run: yarn build

      - name: Prepare Build Directory
        working-directory: ./client
        run: mkdir -p $SOURCEMAPS_DIR

      - name: Prepare $GIT_COMMIT_SHORT
        working-directory: ./client
        run: ./scripts/getGitCommitShort.sh >> $GITHUB_ENV

      - name: Codepush Android
        working-directory: ./client
        if: inputs.platform == 'android'
        run: >
          yarn appcenter codepush release-react
          --app $ANDROID_CODE_PUSH_PROJECT
          --deployment-name ${{ inputs.environment }}
          --output-dir $BUILD_DIR
          --sourcemap-output-dir $SOURCEMAPS_DIR
          --disable-duplicate-release-error

      - name: Codepush iOS
        working-directory: ./client
        if: inputs.platform == 'ios'
        run: >
          yarn appcenter codepush release-react
          --app $IOS_CODE_PUSH_PROJECT
          --deployment-name ${{ inputs.environment }}
          --plist-file ./ios/Supporting/Info.plist
          --xcode-project-file ./ios/twentyninek.xcodeproj
          --output-dir $BUILD_DIR
          --sourcemap-output-dir $SOURCEMAPS_DIR
          --disable-duplicate-release-error

      - name: Upload Android Source Maps to Sentry
        working-directory: ./client
        if: inputs.platform == 'android'
        run: >
          yarn sentry-cli react-native appcenter
          $ANDROID_CODE_PUSH_PROJECT android
          $BUILD_DIR/CodePush $SOURCEMAPS_DIR
          --deployment ${{ inputs.environment }}
          --dist ${{ inputs.environment }}
          --release-name $GIT_COMMIT_SHORT

      - name: Upload iOS Source Maps to Sentry
        working-directory: ./client
        if: inputs.platform == 'ios'
        run: >
          yarn sentry-cli react-native appcenter
          $IOS_CODE_PUSH_PROJECT ios
          $BUILD_DIR/CodePush $SOURCEMAPS_DIR
          --deployment ${{ inputs.environment }}
          --dist ${{ inputs.environment }}
          --release-name $GIT_COMMIT_SHORT

      - name: Associate Commits to Sentry Release
        working-directory: ./client
        run: yarn sentry-cli releases set-commits --auto $GIT_COMMIT_SHORT
