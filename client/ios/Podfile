# https://github.com/zoontek/react-native-permissions?tab=readme-ov-file#setup
def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end
node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

platform :ios, min_ios_version_supported
prepare_react_native_project!

setup_permissions([
  'Calendars',
  'PhotoLibrary',
  'Camera',
  'Microphone',
  'Notifications'
  # 'AppTrackingTransparency',
  # 'BluetoothPeripheral',
  # 'Contacts',
  # 'FaceID',
  # 'LocationAccuracy',
  # 'LocationAlways',
  # 'LocationWhenInUse',
  # 'MediaLibrary',
  # 'Motion',
  # 'PhotoLibrary',
  # 'PhotoLibraryAddOnly',
  # 'Reminders',
  # 'SpeechRecognition',
  # 'StoreKit'
])

# https://rnfirebase.io/#altering-cocoapods-to-use-frameworks
use_frameworks! :linkage => :static
$RNFirebaseAsStaticFramework = true

# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
#
# To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# ```js
# module.exports = {
#   dependencies: {
#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# ```
#flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

abstract_target 'twentyninek' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    #:flipper_configuration => flipper_config,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  pod 'PromisesSwift'

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )
  end

  target 'dev' do end
  target 'staging' do end
  target 'production' do end
end

#post_install do |installer|
#  react_native_post_install(installer)
#  __apply_Xcode_12_5_M1_post_install_workaround(installer)
#
#  installer.pods_project.targets.each do |target|
#    # This is a temporary fix for Xcode 14 code signing issues. Can probably be removed in CocoaPods > 1.11.3
#    # https://github.com/CocoaPods/CocoaPods/issues/11402
#    if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
#      target.build_configurations.each do |config|
#          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
#      end
#    end
#
#    # This is a temporary fix for Xcode 15 code. Can be removed when upgrading react native.
#    # https://github.com/facebook/react-native/issues/37748
#    target.build_configurations.each do |config|
#      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', '_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION']
#    end
#  end
#end
