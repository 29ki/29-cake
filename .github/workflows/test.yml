name: Test

on:
  workflow_call:
    inputs:
      skipClientVersionBumpTest:
        required: false
        type: boolean

jobs:
  client:
    name: Client
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required to be able to run testIfVersionNeedsBump.sh againt main branch

      - name: Use Node.js v16
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Cache Shared Dependencies
        id: cache-shared-node-modules
        uses: actions/cache@v2
        with:
          path: ./shared/node_modules
          key: shared-node-modules-${{ hashFiles('./shared/yarn.lock') }}

      - name: Install Shared Dependencies
        if: steps.cache-shared-node-modules.outputs.cache-hit != 'true'
        working-directory: ./shared
        run: yarn

      - name: Cache Content Dependencies
        id: cache-content-node-modules
        uses: actions/cache@v2
        with:
          path: ./content/node_modules
          key: content-node-modules-${{ hashFiles('./content/yarn.lock') }}

      - name: Install Content Dependencies
        if: steps.cache-content-node-modules.outputs.cache-hit != 'true'
        working-directory: ./content
        run: yarn

      - name: Cache Client Dependencies
        id: cache-client-node-modules
        uses: actions/cache@v2
        with:
          path: ./client/node_modules
          key: client-node-modules-${{ hashFiles('./client/yarn.lock') }}

      - name: Install Client Dependencies
        if: steps.cache-client-node-modules.outputs.cache-hit != 'true'
        working-directory: ./client
        run: yarn

      - name: Check if native versions needs bump
        if: inputs.skipClientVersionBumpTest != true
        working-directory: ./client
        run: yarn test:version

      - name: Run tests
        working-directory: ./client
        run: yarn test

  functions:
    name: Functions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Cache Shared Dependencies
        id: cache-shared-node-modules
        uses: actions/cache@v2
        with:
          path: ./shared/node_modules
          key: shared-node-modules-${{ hashFiles('./shared/yarn.lock') }}

      - name: Install Shared Dependencies
        if: steps.cache-shared-node-modules.outputs.cache-hit != 'true'
        working-directory: ./shared
        run: yarn

      - name: Cache Content Dependencies
        id: cache-content-node-modules
        uses: actions/cache@v2
        with:
          path: ./content/node_modules
          key: content-node-modules-${{ hashFiles('./content/yarn.lock') }}

      - name: Install Content Dependencies
        if: steps.cache-content-node-modules.outputs.cache-hit != 'true'
        working-directory: ./content
        run: yarn

      - name: Cache Functions Dependencies
        id: cache-functions-node-modules
        uses: actions/cache@v2
        with:
          path: ./functions/node_modules
          key: functions-node-modules-${{ hashFiles('./functions/yarn.lock') }}

      - name: Install Functions Dependencies
        if: steps.cache-functions-node-modules.outputs.cache-hit != 'true'
        working-directory: ./functions
        run: yarn

      - name: Run tests
        working-directory: ./functions
        run: yarn test

  cms:
    name: CMS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js v16
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Cache Shared Dependencies
        id: cache-shared-node-modules
        uses: actions/cache@v2
        with:
          path: ./shared/node_modules
          key: shared-node-modules-${{ hashFiles('./shared/yarn.lock') }}

      - name: Install Shared Dependencies
        if: steps.cache-shared-node-modules.outputs.cache-hit != 'true'
        working-directory: ./shared
        run: yarn

      - name: Cache CMS Dependencies
        id: cache-cms-node-modules
        uses: actions/cache@v2
        with:
          path: ./cms/node_modules
          key: cms-node-modules-${{ hashFiles('./cms/yarn.lock') }}

      - name: Install CMS Dependencies
        if: steps.cache-cms-node-modules.outputs.cache-hit != 'true'
        working-directory: ./cms
        run: yarn

      - name: Run tests
        working-directory: ./cms
        run: yarn test

  content:
    name: Content
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js v16
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Cache Shared Dependencies
        id: cache-shared-node-modules
        uses: actions/cache@v2
        with:
          path: ./shared/node_modules
          key: shared-node-modules-${{ hashFiles('./shared/yarn.lock') }}

      - name: Install Shared Dependencies
        if: steps.cache-shared-node-modules.outputs.cache-hit != 'true'
        working-directory: ./shared
        run: yarn

      - name: Cache Content Dependencies
        id: cache-content-node-modules
        uses: actions/cache@v2
        with:
          path: ./content/node_modules
          key: content-node-modules-${{ hashFiles('./cms/yarn.lock') }}

      - name: Install Content Dependencies
        if: steps.cache-content-node-modules.outputs.cache-hit != 'true'
        working-directory: ./content
        run: yarn

      - name: Run tests
        working-directory: ./content
        run: yarn test
