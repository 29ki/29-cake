name: Revopush

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      platform:
        required: true
        type: string

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: client-${{ inputs.environment }}
    env:
      BUILD_DIR: ./build
      SOURCEMAPS_DIR: ./build/sourcemaps

      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ vars.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}

      REVOPUSH_ACCESS_KEY: ${{ secrets.REVOPUSH_ACCESS_KEY }}
      ANDROID_REVOPUSH_PROJECT: ${{ vars.ANDROID_REVOPUSH_PROJECT }}
      IOS_REVOPUSH_PROJECT: ${{ vars.IOS_REVOPUSH_PROJECT }}

      DOTENV_ENVIRONMENT: ${{ vars.ENVIRONMENT }}
      DOTENV_DEBUG: ${{ vars.DEBUG }}
      DOTENV_ANDROID_REVOPUSH_DEPLOYMENT_KEY: ${{ vars.ANDROID_REVOPUSH_DEPLOYMENT_KEY }}
      DOTENV_ANDROID_PACKAGE_NAME: ${{ vars.ANDROID_PACKAGE_NAME }}
      DOTENV_API_ENDPOINT: ${{ vars.API_ENDPOINT }}
      DOTENV_DEEP_LINK_PREFIX: ${{ vars.DEEP_LINK_PREFIX }}
      DOTENV_DEEP_LINK_SCHEME: ${{ vars.DEEP_LINK_SCHEME }}
      DOTENV_IOS_APPSTORE_ID: ${{ vars.IOS_APPSTORE_ID }}
      DOTENV_IOS_REVOPUSH_DEPLOYMENT_KEY: ${{ vars.IOS_REVOPUSH_DEPLOYMENT_KEY }}
      DOTENV_METRICS_ENDPOINT: ${{ vars.METRICS_ENDPOINT }}
      DOTENV_POSTHOG_API_KEY: ${{ vars.POSTHOG_API_KEY }}
      DOTENV_SENTRY_DSN: ${{ vars.SENTRY_DSN }}
      DOTENV_STORAGE_ENDPOINT: ${{ vars.STORAGE_ENDPOINT }}
      DOTENV_STRIPE_APPLE_MERCHANT_IDENTIFIER: ${{ vars.STRIPE_APPLE_MERCHANT_IDENTIFIER }}
      DOTENV_STRIPE_PUBLISHABLE_KEY: ${{ vars.STRIPE_PUBLISHABLE_KEY }}

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js v18.18
        uses: actions/setup-node@v3
        with:
          node-version: 18.18

      - name: Create Dotenv File
        uses: iamsauravsharma/create-dotenv@v1.2.1
        with:
          env-prefix: DOTENV_
          directory: ./client

      - name: Cache Shared Dependencies
        id: cache-shared-node-modules
        uses: actions/cache@v4
        with:
          path: ./shared/node_modules
          key: shared-node-modules-${{ hashFiles('./shared/yarn.lock') }}

      - name: Install Shared Dependencies
        if: steps.cache-shared-node-modules.outputs.cache-hit != 'true'
        working-directory: ./shared
        run: yarn

      - name: Cache Content Dependencies
        id: cache-content-node-modules
        uses: actions/cache@v4
        with:
          path: ./content/node_modules
          key: content-node-modules-${{ hashFiles('./content/yarn.lock') }}

      - name: Install Content Dependencies
        if: steps.cache-content-node-modules.outputs.cache-hit != 'true'
        working-directory: ./content
        run: yarn

      - name: Cache Client Dependencies
        id: cache-client-node-modules
        uses: actions/cache@v4
        with:
          path: ./client/node_modules
          key: client-node-modules-${{ hashFiles('./client/yarn.lock') }}

      - name: Install Client Dependencies
        if: steps.cache-client-node-modules.outputs.cache-hit != 'true'
        working-directory: ./client
        run: yarn

      - name: Build Content
        working-directory: ./content
        run: yarn build

      - name: Prepare Build Directory
        working-directory: ./client
        run: mkdir -p $SOURCEMAPS_DIR

      - name: Prepare $GIT_COMMIT_SHORT
        working-directory: ./shared
        run: ./scripts/getGitCommitShort.sh >> $GITHUB_ENV

      - name: Authenticate Revopush
        working-directory: ./client
        run: yarn revopush login --accessKey $REVOPUSH_ACCESS_KEY

      - name: Revopush Android
        working-directory: ./client
        if: inputs.platform == 'android'
        run: >
          yarn revopush release-react $ANDROID_REVOPUSH_PROJECT android
          --deploymentName ${{ vars.ENVIRONMENT }}
          --outputDir $BUILD_DIR/Revopush
          --sourcemapOutput $SOURCEMAPS_DIR
          --noDuplicateReleaseError
          --useHermes

      - name: Revopush iOS
        working-directory: ./client
        if: inputs.platform == 'ios'
        run: >
          yarn revopush release-react $IOS_REVOPUSH_PROJECT ios
          --deploymentName ${{ vars.ENVIRONMENT }}
          --plistFile ./ios/Supporting/Info.plist
          --xcodeProjectFile ./ios/twentyninek.xcodeproj
          --outputDir $BUILD_DIR/Revopush
          --sourcemapOutput $SOURCEMAPS_DIR
          --noDuplicateReleaseError
          --useHermes

      - name: Upload Android Source Maps to Sentry
        working-directory: ./client
        if: inputs.platform == 'android'
        run: >
          yarn sentry-cli react-native appcenter
          $ANDROID_REVOPUSH_PROJECT android
          $BUILD_DIR/Revopush $SOURCEMAPS_DIR
          --deployment ${{ vars.ENVIRONMENT }}
          --dist ${{ vars.ENVIRONMENT }}
          --release-name $GIT_COMMIT_SHORT

      - name: Upload iOS Source Maps to Sentry
        working-directory: ./client
        if: inputs.platform == 'ios'
        run: >
          yarn sentry-cli react-native appcenter
          $IOS_REVOPUSH_PROJECT ios
          $BUILD_DIR/Revopush $SOURCEMAPS_DIR
          --deployment ${{ vars.ENVIRONMENT }}
          --dist ${{ vars.ENVIRONMENT }}
          --release-name $GIT_COMMIT_SHORT

      - name: Associate Commits to Sentry Release
        working-directory: ./client
        run: yarn sentry-cli releases set-commits --auto $GIT_COMMIT_SHORT
